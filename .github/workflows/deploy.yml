name: Execute Command on EC2 via SSM

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  run-on-ec2:
    runs-on: ubuntu-latest # GitHub-hosted runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install AWS CLI (If Not Installed)
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install
          fi

          aws --version
        shell: bash

      - name: Configure AWS Credentials (For GitHub Runner)
        run: |
          mkdir -p ~/.aws
          cp scripts/aws-credentials.txt ~/.aws/credentials
          chmod 600 ~/.aws/credentials
        shell: bash

      - name: Get Instance IDs for Private IPs
        run: |
          echo "Fetching instance IDs for private IPs..."
          > scripts/instance_ids.txt # Clear previous file

          while read -r server; do
            INSTANCE_ID=$(aws ec2 describe-instances \
              --filters "Name=private-ip-address,Values=$server" \
              --query "Reservations[*].Instances[*].InstanceId" --output text)
              
            if [[ -n "$INSTANCE_ID" ]]; then
              echo "$INSTANCE_ID" >> scripts/instance_ids.txt
              echo "‚úÖ Found instance ID: $INSTANCE_ID for IP: $server"
            else
              echo "‚ùå No instance found for IP: $server"
            fi
          done < scripts/serverlist.txt
        shell: bash

      - name: Upload command.sh to S3
        run: |
          aws s3 cp scripts/command.sh s3://os-comparison-bucket/command.sh
        shell: bash

      - name: Execute Command on EC2 via SSM
        run: |
          while read -r INSTANCE_ID; do
            echo "üöÄ Sending SSM command to instance: $INSTANCE_ID"

            COMMAND_ID=$(aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --targets "Key=instanceIds,Values=$INSTANCE_ID" \
              --parameters '{"commands":["aws s3 cp s3://os-comparison-bucket/command.sh /tmp/command.sh && chmod +x /tmp/command.sh && sudo bash /tmp/command.sh"]}' \
              --region us-east-1 \
              --query "Command.CommandId" --output text)

            if [[ -z "$COMMAND_ID" ]]; then
              echo "‚ùå Failed to send SSM command to $INSTANCE_ID"
              exit 1
            fi

            echo "‚è≥ Waiting for command execution..."
            sleep 10  # Give time for execution

            echo "‚úÖ Fetching command output..."
            aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "$INSTANCE_ID" \
              --region us-east-1 \
              --query '{Status:Status, StandardOutputContent:StandardOutputContent, StandardErrorContent:StandardErrorContent}' \
              --output json | tee "output_$INSTANCE_ID.json"

          done < scripts/instance_ids.txt
        shell: bash

      - name: Upload Output to S3
        run: |
          aws s3 cp . s3://os-comparison-bucket/ --recursive --exclude "*" --include "output_*.json"
        shell: bash

      - name: Trigger AWS Lambda for Comparison
        run: |
          aws lambda invoke --function-name comparefiles --payload '{}' response.json
        shell: bash
