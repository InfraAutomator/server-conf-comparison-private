name: Execute Command on EC2 via SSM

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  run-on-ec2:
    runs-on: ubuntu-latest # GitHub-hosted runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install AWS CLI (If Not Installed)
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

          # Check if AWS CLI is installed
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found. Installing now..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed."
          fi

          # Verify AWS CLI version
          aws --version
        shell: bash

      - name: Configure AWS Credentials (For GitHub Runner Only)
        run: |
          mkdir -p ~/.aws
          cp scripts/aws-credentials.txt ~/.aws/credentials
          chmod 600 ~/.aws/credentials
        shell: bash

      - name: Upload command.sh to S3
        run: |
          echo "Uploading command.sh to S3..."
          aws s3 cp scripts/command.sh s3://os-comparison-bucket/command.sh
        shell: bash

      - name: Execute Command on EC2 Instances via SSM
        run: |
          while read -r server; do
            echo "Executing command on EC2 instance with Private IP: $server"

            # Get the Instance ID using Private IP
            INSTANCE_ID=$(aws ec2 describe-instances \
              --filters "Name=private-ip-address,Values=$server" \
              --query "Reservations[*].Instances[*].InstanceId" --output text)

            if [[ -z "$INSTANCE_ID" ]]; then
              echo "❌ Instance with Private IP $server not found!"
              continue
            fi

            echo "✅ Found Instance ID: $INSTANCE_ID"

            # Run SSM Command
            COMMAND_ID=$(aws ssm send-command \
              --document-name "AWS-RunShellScript" \
              --targets "Key=instanceIds,Values=$INSTANCE_ID" \
              --parameters commands=["aws s3 cp s3://os-comparison-bucket/command.sh /tmp/command.sh && chmod +x /tmp/command.sh && sudo bash /tmp/command.sh"] \
              --region us-east-1 \
              --query "Command.CommandId" --output text)

            echo "⏳ Waiting for command execution..."
            sleep 10  # Wait before fetching the result

            # Fetch Command Output
            aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "$INSTANCE_ID" \
              --region us-east-1

          done < scripts/serverlist.txt
        shell: bash

      - name: Upload Output to S3
        run: |
          while read -r server; do
            INSTANCE_ID=$(aws ec2 describe-instances \
              --filters "Name=private-ip-address,Values=$server" \
              --query "Reservations[*].Instances[*].InstanceId" --output text)

            if [[ -z "$INSTANCE_ID" ]]; then
              echo "❌ Instance with Private IP $server not found!"
              continue
            fi

            # Upload logs to S3
            aws ssm get-command-invocation \
              --command-id "$COMMAND_ID" \
              --instance-id "$INSTANCE_ID" \
              --region us-east-1 \
              --query "StandardOutputContent" --output text > "${server}_output.txt"

            echo "Uploading output from $server to S3..."
            aws s3 cp "${server}_output.txt" s3://os-comparison-bucket/
          done < scripts/serverlist.txt
        shell: bash
